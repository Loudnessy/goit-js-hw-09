{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAKPL,EAAKa,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAMN,IAJA,IAAMV,EAAQL,EAAKgB,WAAW,GAAGC,iBAAiBC,MAC5CC,EAAOnB,EAAKgB,WAAW,GAAGC,iBAAiBC,MAC3CE,EAASpB,EAAKgB,WAAW,GAAGC,iBAAiBC,MAE1CG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhBlB,EAFCkB,EACIhB,GAASgB,EAAI,GAAKF,GAIpCG,MAAK,SAACC,GACLC,OAAO,uBAA+CC,OAAtBF,EAAOnB,SAAS,QAAmBqB,OAAbF,EAAOlB,MAAM,OACjEqB,QAAMC,IAAI,uBAA+CF,OAAtBF,EAAOnB,SAAS,QAAmBqB,OAAbF,EAAOlB,MAAM,M,IAEzEuB,OAAM,SAACC,GACNH,QAAQC,IAAI,sBAA2CF,OAArBI,EAAMzB,SAAS,QAAkBqB,OAAZI,EAAMxB,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nform.addEventListener('submit', (event) => {\n  event.preventDefault();\n\n  const delay = form.childNodes[1].lastElementChild.value;\n  const step = form.childNodes[3].lastElementChild.value;\n  const amount = form.childNodes[5].lastElementChild.value;\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n    const promise = createPromise(position, currentDelay);\n\n    promise\n      .then((result) => {\n        prompt(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n        console.log(`✅ Fulfilled promise ${result.position} in ${result.delay}ms`);\n      })\n      .catch((error) => {\n        console.log(`❌ Rejected promise ${error.position} in ${error.delay}ms`);\n      });\n  }\n});\n\n\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","childNodes","lastElementChild","value","step","amount","i","then","result","prompt","concat","console","log","catch","error"],"version":3,"file":"03-promises.69f00491.js.map"}